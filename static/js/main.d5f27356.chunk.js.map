{"version":3,"sources":["components/imageGalleryItem/ImageItem.module.css","components/modal/Modal.module.css","components/container/Container.module.css","components/button/Button.module.css","components/imageGallery/Image.module.css","components/container/Container.js","components/searchBar/SearchBar.js","api/api.js","components/imageGalleryItem/ImageGalleryItem.js","components/modal/Modal.js","components/button/Button.js","components/loader/Loader.js","components/imageGallery/ImageGallery.js","App.js","index.js","components/searchBar/SearchBar.module.css"],"names":["module","exports","Container","children","className","styles","container","Searchbar","state","imageName","handleChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","alert","searchbar","searchForm","this","type","buttons","label","input","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","ApiService","query","pageNumber","perPage","a","fetch","response","json","parsedResponse","incrementPage","ImageGalleryItem","id","url","tags","largeImage","toggleModal","handleLargeImage","imageGallery","onClick","image","src","alt","propeType","PropTypes","number","isRequired","string","func","modalRoot","document","querySelector","Modal","onClose","handleKeydown","code","handleClickBackdrop","target","window","addEventListener","removeEventListener","createPortal","overlay","modal","Button","button","App","color","height","width","timeout","apiService","ImageGallery","images","showModal","error","loading","prevState","handleBtnClick","getImages","fetchImages","then","hits","catch","finally","prevProps","prevName","currentName","resetPage","scrollTo","top","documentElement","scrollHeight","behavior","map","webformatURL","largeImageURL","length","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5f27356.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageItem_image__11ngl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3oh16\",\"modal\":\"Modal_modal__1pTCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Nu5mD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1dXeC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"Image_imageGallery__4Or5b\",\"imageGalleryItem\":\"Image_imageGalleryItem__v1Ysn\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './SearchBar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  static defaultProps = {\r\n    imageName: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    imageName: PropTypes.string,\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.imageName.trim() === '') {\r\n      alert('Для поиска нужно что то ввести');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imageName);\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.searchbar}>\r\n        <form className={styles.searchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.buttons}>\r\n            <span className={styles.label}>Search</span>\r\n          </button>\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.imageName}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}","const BASE_URL = 'https://pixabay.com';\r\nconst API_KEY = '21930090-2f4bfee534669e28d6350f360';\r\n\r\nexport default class ApiService {\r\n  constructor() {\r\n    this.query = '';\r\n    this.pageNumber = 1;\r\n    this.perPage = 12;\r\n  }\r\n\r\n  async fetchImages() {\r\n    const response = await fetch(\r\n      `${BASE_URL}/api/?image_type=photo&orientation=horizontal&q=${this.query}&page=${this.pageNumber}&per_page=${this.perPage}&key=${API_KEY}`,\r\n    );\r\n    const parsedResponse = await response.json();\r\n    this.incrementPage();\r\n    return parsedResponse;\r\n  }\r\n  incrementPage() {\r\n    this.pageNumber += 1;\r\n  }\r\n  resetPage() {\r\n    this.pageNumber = 1;\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport styles from './ImageItem.module.css';\r\n\r\nconst ImageGalleryItem = ({\r\n  id,\r\n  url,\r\n  tags,\r\n  largeImage,\r\n  toggleModal,\r\n  handleLargeImage,\r\n}) => {\r\n  const handleOpenModal = () => {\r\n    toggleModal();\r\n    handleLargeImage(largeImage);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className={styles.imageGallery}\r\n      key={id}\r\n      onClick={() => handleOpenModal()}\r\n    >\r\n      <img className={styles.image} src={url} alt={tags} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propeType = {\r\n  id: PropTypes.number.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  handleLargeImage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  PropTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n\r\n  handleKeydown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleClickBackdrop = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={styles.overlay} onClick={this.handleClickBackdrop}>\r\n        <div className={styles.modal}>{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}","import PropTypes from \"prop-types\";\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className={styles.button} type=\"button\" onClick={onClick}>\r\n      Load more...\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Bars\"\r\n        color=\"#FF8C00\"\r\n        height={200}\r\n        width={200}\r\n        timeout={1000}\r\n      />\r\n    );\r\n  }\r\n}","import { Component } from 'react';\r\nimport ApiService from '../../api/api';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../modal/Modal';\r\nimport Button from '../button/Button';\r\nimport Loader from '../loader/Loader';\r\nimport styles from './Image.module.css';\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default class ImageGallery extends Component {\r\n  static propTypes = {\r\n    images: PropTypes.array,\r\n    showModal: PropTypes.bool,\r\n    largeImage: PropTypes.string,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n  };\r\n\r\n  state = {\r\n    images: [],\r\n    showModal: false,\r\n    largeImage: '',\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const currentName = this.props.imageName;\r\n\r\n    if (prevName !== currentName) {\r\n      this.setState({ images: [] });\r\n      apiService.query = currentName;\r\n      apiService.resetPage();\r\n      this.getImages();\r\n    }\r\n\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      showModal: !prevState.showModal,\r\n    }));\r\n  };\r\n\r\n  handleLargeImage = image => {\r\n    this.setState({ largeImage: image });\r\n  };\r\n\r\n  handleBtnClick = () => {\r\n    this.getImages();\r\n  };\r\n\r\n  getImages = () => {\r\n    this.setState({ loading: true });\r\n\r\n    apiService\r\n      .fetchImages()\r\n      .then(({ hits }) =>\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...hits],\r\n        })),\r\n      )\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      })\r\n      .finally(this.setState({ loading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { showModal, loading, images, largeImage } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <img src={largeImage} alt=\"images\" />\r\n          </Modal>\r\n        )}\r\n\r\n        <ul className={styles.imageGallery}>\r\n          {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n            return (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                url={webformatURL}\r\n                tags={tags}\r\n                largeImage={largeImageURL}\r\n                toggleModal={this.toggleModal}\r\n                handleLargeImage={this.handleLargeImage}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n        {images.length > 0 && !loading && (\r\n          <Button onClick={this.handleBtnClick} />\r\n        )}\r\n        {loading && (\r\n          <Loader\r\n            type=\"Bars\"\r\n            color=\"#FF8C00\"\r\n            height={200}\r\n            width={200}\r\n            timeout={1000}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}","import { Component } from 'react';\nimport Container from './components/container/Container';\nimport Searchbar from './components/searchBar/SearchBar';\nimport ImageGallery from './components/imageGallery/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleFormSubmit = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery imageName={this.state.imageName} />\n      </Container>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"SearchBar_searchbar__z2hh6\",\"searchForm\":\"SearchBar_searchForm__1XMs5\",\"buttons\":\"SearchBar_buttons__4n_Cg\",\"button\":\"SearchBar_button__25_z0\",\"label\":\"SearchBar_label__1myvW\",\"input\":\"SearchBar_input__VM0Fj\"};"],"sourceRoot":""}